/**
 * Checklist-model
 * AngularJS directive for list of checkboxes
 * https://github.com/vitalets/checklist-model
 * License: MIT http://opensource.org/licenses/MIT
 */
angular.module("checklist-model",[]).directive("checklistModel",["$parse","$compile",function(e,t){function r(e,t,r){if(angular.isArray(e))for(var a=e.length;a--;)if(r(e[a],t))return!0;return!1}function a(e,t,a){return e=angular.isArray(e)?e:[],r(e,t,a)||e.push(t),e}function c(e,t,r){if(angular.isArray(e))for(var a=e.length;a--;)if(r(e[a],t)){e.splice(a,1);break}return e}function n(n,l,i){function o(e){n[i.ngModel]=r(e,k,f)}var u=i.checklistModel;i.$set("checklistModel",null),t(l)(n),i.$set("checklistModel",u);var s=e(u),h=s.assign,p=e(i.checklistChange),k=i.checklistValue?e(i.checklistValue)(n.$parent):i.value,f=angular.equals;if(i.hasOwnProperty("checklistComparator"))if("."==i.checklistComparator[0]){var d=i.checklistComparator.substring(1);f=function(e,t){return e[d]===t[d]}}else f=e(i.checklistComparator)(n.$parent);n.$watch(i.ngModel,function(e,t){if(e!==t){var r=s(n.$parent);angular.isFunction(h)&&(e===!0?h(n.$parent,a(r,k,f)):h(n.$parent,c(r,k,f))),p&&p(n)}}),angular.isFunction(n.$parent.$watchCollection)?n.$parent.$watchCollection(u,o):n.$parent.$watch(u,o,!0)}return{restrict:"A",priority:1e3,terminal:!0,scope:!0,compile:function(e,t){if(("INPUT"!==e[0].tagName||"checkbox"!==t.type)&&"MD-CHECKBOX"!==e[0].tagName&&!t.btnCheckbox)throw'checklist-model should be applied to `input[type="checkbox"]` or `md-checkbox`.';if(!t.checklistValue&&!t.value)throw"You should provide `value` or `checklist-value`.";return t.ngModel||t.$set("ngModel","checked"),n}}}]);